What happens when you initialize a repository? Why do you need to do it?
	When you initialize a git repository it creates a a hidden meta data
	file called .git. That file stores information/data about each version of the file

	You need to initialize a directory if you want to use git as version
	control for that directory.

How is the staaging area different from the working directory and the repository?
What value do you think it offers?
	The staging area can be looked at as an intermediate area between the working
	directory and the repository. This is where you add files from the working
	directory to the repository. This gives you more control over what is tracked.
	You can remove files from the staging area before you commit it if you 
	accidently added a file.

How can you use the staging area to make sure you have one commit per logical change?
	You can utilize the staging area to add files that relate to the one commit.

What are some situations when branches would be helpful in keeping your history organized?
How would branches help?
	When you are creating a feature that you are not sure about. You could create a new branch.
	This will keep your commits orginized. So every commit for that feature would be on that 
	branch. This will make those commits easy to track and recognize

How do the diagrams help you visualize the branch structure?
	diagrams help you by putting a actual chart or someting phsyical to represent
	the branch structure. This lets you get a better picture or when one branch started,
	vs another. Also lets you see how the commits relate to each other timewise.

What is the result of merging two branches together? Why do we represent it in the diagram
the way we do?
	The result of merging two branches together is to have one branch that contains commits
	from both branches. We represent it in the diagram the way we do 
What are the pros and cons of Git's automatic merging vs.always doing merges manually?
	The pros of doing automerging is that it is fast and effiecient. But doing it manually gives
	you the oppurtunity to resolve conflicts that git normally could not resolve on its own.