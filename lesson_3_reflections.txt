When would you want to use a remote repository rather than keeping all your work local?
  When you are sharing with others. Or want others to look at your code/files/work/etc..

Why might you want to always pull changes manually reather than having Git automatically stay
up-to-date with your remote repository?
	Because you might modify a file that is not up to date with the remote. Then when you check
	in and  push to the remote you could possible revert someones changes.

Describe the differences between forkss, clones, and beranches. Wehn would you use one instead of another?
	You would use a fork when you want to clone a repo that is located on GitHub to another location
	on Github.

	You would use a clone when you want to clone a repository from Github to your local cpu
	or from your local cpu to your local cpu

	You would use a branch when you want to make a parallel code line on the same repository. 

What is the benefit of having a cop of the last known state of the remote stored locally?
	You could update the last known state of the remote respository locally then access it
	off line. 

How would you collaborate without using Git or GitHub? What would be easier and what would be harder?
	We would collaborate by sending files back and fourth or by storing files on shared server like 
	Sharepoint. We would have to merge files manually as well.

When would you want to make changes in a separate branch rather than directly in master? 
What benefits does each approach have?
	You would want to make changes to a seperate branch when you want to share your changes
	before actually adding it to the master branch

	